---
import Layout from '../../layouts/Layout.astro';
import AddToCartButton from '../../components/AddToCartButton.tsx';
import Breadcrumb from '../../components/Breadcrumb.astro';
import ProductSection from '../../components/ProductSection.astro';
import { allProducts, collections } from '../../data/products.ts';

export function getStaticPaths() {
  return allProducts.map((product) => ({
    params: { slug: product.slug },
  }));
}

const { slug } = Astro.params;
const product = allProducts.find(p => p.slug === slug);

if (!product) {
  return Astro.redirect('/404');
}

const productCollection = collections.find(c => c.id === product.collectionId);

const breadcrumbLinks = [
  { text: 'Home', href: '/' },
  { text: 'Collections', href: '/collections' },
  { text: productCollection.title, href: `/collection/${productCollection.id}` }
];

// Logic for recommended products
const recommendedProducts = allProducts
  .filter(p => p.collectionId === product.collectionId && p.id !== product.id)
  .slice(0, 4);
---
<Layout>
  <main class="max-w-6xl mx-auto px-6 py-8">
    <div class="mb-4 md:hidden">
      <Breadcrumb links={breadcrumbLinks} />
    </div>
    <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-5 gap-8 lg:gap-x-16">
      <!-- Left Column: Image -->
      <div class="bg-muted rounded-lg aspect-square xl:col-span-3">
        <img 
          src={product.image.src} 
          alt={product.title}
          width={product.image.width}
          height={product.image.height}
          class="w-full h-full object-cover rounded-lg"
          transition:name={`product-image-${product.id}`}
        />
      </div>
      <!-- Right Column: Details -->
      <div class="py-4 xl:col-span-2">
        <div class="mb-4 hidden md:block">
          <Breadcrumb links={breadcrumbLinks} />
        </div>
        <h1 class="text-3xl md:text-4xl font-bold">{product.title}</h1>
        <p class="text-2xl md:text-3xl text-price my-4">{product.price}</p>
        
        {product.colors && (
          <div class="mb-6">
            <p class="text-sm font-medium text-muted-foreground mb-2">Color</p>
            <div class="flex space-x-2">
              {product.colors.map((color) => (
                <div 
                  class="w-8 h-8 rounded-full border-2 border-border"
                  style={`background-color: ${color}`}
                  title={color}
                />
              ))}
            </div>
          </div>
        )}

        <AddToCartButton client:load product={product} />
      </div>
    </div>
  </main>

  <!-- This section is now outside the narrow main container -->
  {recommendedProducts.length > 0 && (
    <div class="py-16">
      <ProductSection 
        title="You might also like"
        products={recommendedProducts}
      />
    </div>
  )}
</Layout>